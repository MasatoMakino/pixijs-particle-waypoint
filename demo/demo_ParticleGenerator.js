(()=>{var __webpack_modules__={405:(__unused_webpack_module,exports)=>{eval("exports.dn = () => {\n  return [[199.999692558296, 139.037809861326], [199.999692558296, 139.037809861326, 216.517501342052, 91.0703552349714, 260.408864739813, 101.478048251449], [304.306569058069, 111.887435228376, 302.040473463538, 149.898168782486, 297.969050788655, 167.089794944798], [293.891253219557, 184.314831799952, 266.291989537884, 213.247676318414, 241.405592420215, 229.538070494226], [216.517501342052, 245.828464670041, 201.360366325658, 263.475297677716, 199.999692558296, 269.360116287618], [198.644947652665, 263.475297677716, 183.481883774538, 245.828464670041, 158.595486656873, 229.538070494226], [133.70739557871, 213.247676318414, 106.111932139903, 184.314831799952, 102.030334327938, 167.089794944798], [97.9589002789453, 149.898168782486, 95.6966160382817, 111.887435228376, 139.592214337275, 101.478048251449], [183.481883774538, 91.0703552349714, 199.999692558296, 139.037809861326, 199.999692558296, 139.037809861326]];\n};\n\nexports.P5 = () => {\n  const X = 200;\n  const Y = 200;\n  const K = 4 * (Math.sqrt(2) - 1) / 3;\n  const R = 100;\n  const RK = R * K;\n  return [[R + X, 0 + Y], [R + X, RK + Y, RK + X, R + Y, 0 + X, R + Y], [-RK + X, R + Y, -R + X, RK + Y, -R + X, 0 + Y], [-R + X, -RK + Y, -RK + X, -R + Y, 0 + X, -R + Y], [RK + X, -R + Y, R + X, -RK + Y, R + X, 0 + Y]];\n};\n\nexports.Db = () => {\n  return [[200, 100], [300, 273.205080756887], [100, 273.205080756887], [200, 100]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxHQUFELEVBQU0sR0FBTixDQUpLLENBQVA7QUFNRCxDQVBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9waXhpanMtcGFydGljbGUtd2F5cG9pbnQvLi9kZW1vU3JjL1NhbXBsZVBhdGguanM/OTk4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmdldEhlYXJ0UGF0aCA9ICgpID0+IHtcbiAgcmV0dXJuIFtcbiAgICBbMTk5Ljk5OTY5MjU1ODI5NiwgMTM5LjAzNzgwOTg2MTMyNl0sXG4gICAgW1xuICAgICAgMTk5Ljk5OTY5MjU1ODI5NixcbiAgICAgIDEzOS4wMzc4MDk4NjEzMjYsXG4gICAgICAyMTYuNTE3NTAxMzQyMDUyLFxuICAgICAgOTEuMDcwMzU1MjM0OTcxNCxcbiAgICAgIDI2MC40MDg4NjQ3Mzk4MTMsXG4gICAgICAxMDEuNDc4MDQ4MjUxNDQ5XG4gICAgXSxcbiAgICBbXG4gICAgICAzMDQuMzA2NTY5MDU4MDY5LFxuICAgICAgMTExLjg4NzQzNTIyODM3NixcbiAgICAgIDMwMi4wNDA0NzM0NjM1MzgsXG4gICAgICAxNDkuODk4MTY4NzgyNDg2LFxuICAgICAgMjk3Ljk2OTA1MDc4ODY1NSxcbiAgICAgIDE2Ny4wODk3OTQ5NDQ3OThcbiAgICBdLFxuICAgIFtcbiAgICAgIDI5My44OTEyNTMyMTk1NTcsXG4gICAgICAxODQuMzE0ODMxNzk5OTUyLFxuICAgICAgMjY2LjI5MTk4OTUzNzg4NCxcbiAgICAgIDIxMy4yNDc2NzYzMTg0MTQsXG4gICAgICAyNDEuNDA1NTkyNDIwMjE1LFxuICAgICAgMjI5LjUzODA3MDQ5NDIyNlxuICAgIF0sXG4gICAgW1xuICAgICAgMjE2LjUxNzUwMTM0MjA1MixcbiAgICAgIDI0NS44Mjg0NjQ2NzAwNDEsXG4gICAgICAyMDEuMzYwMzY2MzI1NjU4LFxuICAgICAgMjYzLjQ3NTI5NzY3NzcxNixcbiAgICAgIDE5OS45OTk2OTI1NTgyOTYsXG4gICAgICAyNjkuMzYwMTE2Mjg3NjE4XG4gICAgXSxcbiAgICBbXG4gICAgICAxOTguNjQ0OTQ3NjUyNjY1LFxuICAgICAgMjYzLjQ3NTI5NzY3NzcxNixcbiAgICAgIDE4My40ODE4ODM3NzQ1MzgsXG4gICAgICAyNDUuODI4NDY0NjcwMDQxLFxuICAgICAgMTU4LjU5NTQ4NjY1Njg3MyxcbiAgICAgIDIyOS41MzgwNzA0OTQyMjZcbiAgICBdLFxuICAgIFtcbiAgICAgIDEzMy43MDczOTU1Nzg3MSxcbiAgICAgIDIxMy4yNDc2NzYzMTg0MTQsXG4gICAgICAxMDYuMTExOTMyMTM5OTAzLFxuICAgICAgMTg0LjMxNDgzMTc5OTk1MixcbiAgICAgIDEwMi4wMzAzMzQzMjc5MzgsXG4gICAgICAxNjcuMDg5Nzk0OTQ0Nzk4XG4gICAgXSxcbiAgICBbXG4gICAgICA5Ny45NTg5MDAyNzg5NDUzLFxuICAgICAgMTQ5Ljg5ODE2ODc4MjQ4NixcbiAgICAgIDk1LjY5NjYxNjAzODI4MTcsXG4gICAgICAxMTEuODg3NDM1MjI4Mzc2LFxuICAgICAgMTM5LjU5MjIxNDMzNzI3NSxcbiAgICAgIDEwMS40NzgwNDgyNTE0NDlcbiAgICBdLFxuICAgIFtcbiAgICAgIDE4My40ODE4ODM3NzQ1MzgsXG4gICAgICA5MS4wNzAzNTUyMzQ5NzE0LFxuICAgICAgMTk5Ljk5OTY5MjU1ODI5NixcbiAgICAgIDEzOS4wMzc4MDk4NjEzMjYsXG4gICAgICAxOTkuOTk5NjkyNTU4Mjk2LFxuICAgICAgMTM5LjAzNzgwOTg2MTMyNlxuICAgIF1cbiAgXTtcbn07XG5cbmV4cG9ydHMuZ2V0Q2lyY2xlID0gKCkgPT4ge1xuICBjb25zdCBYID0gMjAwO1xuICBjb25zdCBZID0gMjAwO1xuXG4gIGNvbnN0IEsgPSAoNCAqIChNYXRoLnNxcnQoMikgLSAxKSkgLyAzO1xuICBjb25zdCBSID0gMTAwO1xuICBjb25zdCBSSyA9IFIgKiBLO1xuICByZXR1cm4gW1xuICAgIFtSICsgWCwgMCArIFldLFxuICAgIFtSICsgWCwgUksgKyBZLCBSSyArIFgsIFIgKyBZLCAwICsgWCwgUiArIFldLFxuICAgIFstUksgKyBYLCBSICsgWSwgLVIgKyBYLCBSSyArIFksIC1SICsgWCwgMCArIFldLFxuICAgIFstUiArIFgsIC1SSyArIFksIC1SSyArIFgsIC1SICsgWSwgMCArIFgsIC1SICsgWV0sXG4gICAgW1JLICsgWCwgLVIgKyBZLCBSICsgWCwgLVJLICsgWSwgUiArIFgsIDAgKyBZXVxuICBdO1xufTtcblxuZXhwb3J0cy5nZXRUcmlhbmdsZSA9ICgpID0+IHtcbiAgcmV0dXJuIFtcbiAgICBbMjAwLCAxMDBdLFxuICAgIFszMDAsIDI3My4yMDUwODA3NTY4ODddLFxuICAgIFsxMDAsIDI3My4yMDUwODA3NTY4ODddLFxuICAgIFsyMDAsIDEwMF1cbiAgXTtcbn07XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsImdldEhlYXJ0UGF0aCIsImdldENpcmNsZSIsIlgiLCJZIiwiSyIsIk1hdGgiLCJzcXJ0IiwiUiIsIlJLIiwiZ2V0VHJpYW5nbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///405\n")},512:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/@masatomakino/particle-waypoint/esm/index.js + 13 modules\nvar esm = __webpack_require__(362);\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 334 modules\nvar lib = __webpack_require__(535);\n;// CONCATENATED MODULE: ./esm/PixiParticle.js\n\n\nclass PixiParticle extends esm/* Particle */.hp {\n  constructor() {\n    super(...arguments);\n    this.r = 0.0; //媒介変数tに応じた回転量\n\n    this.rotationSpeedSin = 0.0;\n    this.rotationSpeedCos = 0.0; //初期回転量\n\n    this.rotationSin = 0.0;\n    this.rotationCos = 0.0;\n  }\n\n  init(parent, bitmapURL, rangeR, rangeRotationSpeed, blendMode) {\n    this.parent = parent;\n    const texture = lib/* Texture.from */.xEZ.from(bitmapURL);\n    this.bitmap = new lib/* Sprite */.jyi(texture);\n    this.bitmap.anchor.set(0.5, 0.5);\n    this.bitmap.blendMode = blendMode;\n    this.parent.addChild(this.bitmap);\n    this.r = rangeR * Math.random();\n    this.rotationSpeedSin = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSpeedCos = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSin = Math.random() * 2 * Math.PI;\n    this.rotationCos = Math.random() * 2 * Math.PI;\n  }\n\n  update(t) {\n    const n = super.update(t);\n    const pos = this.path.getPoint(n);\n    this.bitmap.x = pos[0];\n    this.bitmap.y = pos[1];\n\n    if (this.r > 0.0) {\n      const sin = this.rotationSpeedSin * t + this.rotationSin;\n      const cos = this.rotationSpeedCos * t + this.rotationCos;\n      this.bitmap.x += Math.cos(cos) * this.r;\n      this.bitmap.y += Math.sin(sin) * this.r;\n    }\n\n    return n;\n  }\n\n  dispose() {\n    super.dispose();\n\n    if (this.parent && this.bitmap.parent) {\n      this.bitmap.parent.removeChild(this.bitmap);\n    }\n\n    this.parent = null;\n    this.bitmap = null;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleGenerator.js\n\n\n\nclass PixiParticleGenerator extends esm/* ParticleGenerator */.F8 {\n  constructor(parent, path, map, option) {\n    var _a;\n\n    super(path, option);\n    this.mapCounter = 0;\n    this._rangeR = 0.0;\n    this._rangeRotationSpeed = 0.0;\n    this.parent = parent;\n\n    if (option) {\n      if (option.rangeR) this._rangeR = option.rangeR;\n      if (option.rangeRotationSpeed) this._rangeRotationSpeed = option.rangeRotationSpeed;\n    }\n\n    this._blendMode = (_a = option === null || option === void 0 ? void 0 : option.blendMode) !== null && _a !== void 0 ? _a : lib/* BLEND_MODES.NORMAL */.T$b.NORMAL;\n\n    if (Array.isArray(map)) {\n      if (map.length === 0) {\n        console.warn("PixiParticleGenerator : オプションとして渡されたテクスチャ配列が空です。このクラスは動作しますが、一切の表示を行いません。");\n        console.trace();\n      }\n\n      this.map = map;\n    } else {\n      this.map = [map];\n    }\n  }\n\n  generateParticle(path) {\n    const particle = new PixiParticle(path);\n    particle.init(this.parent, this.map[this.mapCounter], this._rangeR, this._rangeRotationSpeed, this._blendMode);\n    this.mapCounter = (this.mapCounter += 1) % this.map.length;\n    return particle;\n  }\n\n  generateAll() {\n    this.mapCounter = 0;\n    super.generateAll();\n  }\n\n  get rangeRotationSpeed() {\n    return this._rangeRotationSpeed;\n  }\n\n  set rangeRotationSpeed(value) {\n    this._rangeRotationSpeed = value;\n  }\n\n  get rangeR() {\n    return this._rangeR;\n  }\n\n  set rangeR(value) {\n    this._rangeR = value;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleWay.js\n\n\nclass PixiParticleWay extends esm/* ParticleWay */.mG {\n  constructor(points, option) {\n    var _a, _b;\n\n    super(points);\n    this.passageColor = 0xff0000;\n    this.passageAlpha = 0.25;\n    if (!option) return;\n    this.passageColor = (_a = option === null || option === void 0 ? void 0 : option.passageColor) !== null && _a !== void 0 ? _a : this.passageColor;\n    this.passageAlpha = (_b = option === null || option === void 0 ? void 0 : option.passageAlpha) !== null && _b !== void 0 ? _b : this.passageAlpha;\n\n    if (option === null || option === void 0 ? void 0 : option.parent) {\n      this.initPassage(option.parent);\n    }\n  }\n\n  initPassage(parent) {\n    if (this.passage) return;\n    this.passage = new lib/* Graphics */.TCu();\n    this.passage.visible = false;\n    parent.addChild(this.passage);\n    this.drawPassage();\n  }\n\n  drawPassage() {\n    if (!this.passage) return;\n    if (!this.points) return;\n    if (this.points.length <= 1) return;\n    const isBezier = this.points[1].length === 6;\n    const g = this.passage;\n    g.clear().lineStyle(1, this.passageColor, this.passageAlpha);\n    this.points.forEach((p, index) => {\n      if (index === 0) {\n        g.moveTo(p[0], p[1]);\n        return;\n      }\n\n      if (!isBezier) {\n        g.lineTo(p[0], p[1]);\n        return;\n      }\n\n      g.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n    });\n    g.endFill();\n  }\n\n  onSetPoints() {\n    super.onSetPoints();\n    this.drawPassage();\n  }\n\n  showPassage() {\n    if (!this.passage) return;\n    this.passage.visible = true;\n  }\n\n  hidePassage() {\n    if (!this.passage) return;\n    this.passage.visible = false;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n// EXTERNAL MODULE: ./demoSrc/SamplePath.js\nvar SamplePath = __webpack_require__(405);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n/**\n * ParticleWayを初期化する。\n * @return {ParticleWay}\n */\n\nfunction initWay(stage) {\n  const points = (0,SamplePath/* getHeartPath */.dn)();\n  const wayPoint = new PixiParticleWay(esm/* BezierUtil.subdivide */.jP.subdivide(points), {\n    parent: stage\n  });\n  return wayPoint;\n}\n// EXTERNAL MODULE: ./node_modules/dat.gui/build/dat.gui.module.js\nvar dat_gui_module = __webpack_require__(694);\n// EXTERNAL MODULE: ./node_modules/@tweenjs/tween.js/dist/tween.esm.js\nvar tween_esm = __webpack_require__(471);\n;// CONCATENATED MODULE: ./demoSrc/demo_ParticleGenerator.js\n\n\n\n\n\n\n\n/**\n * DOMContentLoaded後の初期化処理。\n * デモに必要なパーツを一式初期化する。\n */\n\nconst onDomContentsLoaded = () => {\n  const app = new lib/* Application */.MxU({\n    width: 640,\n    height: 480\n  });\n  document.body.appendChild(app.view);\n  const way = initWay(app.stage);\n  const generator = initGenerator(way, app.stage);\n  initGUI(generator);\n};\n/**\n * パーティクル生成機を初期化する。\n * @param way\n * @param stage\n * @return {PixiParticleGenerator}\n */\n\n\nconst initGenerator = (way, stage) => {\n  const bitmap = [];\n\n  for (let i = 0; i < 12; i++) {\n    bitmap.push(`./circle${(i + 1).toString().padStart(2, "0")}.png`);\n  }\n\n  const generator = new PixiParticleGenerator(stage, way, bitmap, {\n    ease: tween_esm/* default.Easing.Cubic.InOut */.ZP.Easing.Cubic.InOut,\n    blendMode: lib/* BLEND_MODES.ADD */.T$b.ADD\n  });\n  generator.animator.setSpeed(166, 8 * 6);\n  generator.play();\n  return generator;\n};\n/**\n * デモのパラメーターを操作するGUIを初期化する。\n * @param generator\n */\n\n\nconst initGUI = generator => {\n  const prop = {\n    isPlay: true,\n    path: "heart",\n    ease: "cubicInOut",\n    valve: true,\n    mode: "SEQUENTIAL",\n    visiblePassage: false,\n    clear: () => {\n      generator.particleContainer.removeAll();\n    }\n  };\n  const gui = new dat_gui_module/* GUI */.XS();\n  const animator = generator.animator;\n  gui.add(animator, "generationInterval", 1, 1000);\n  gui.add(animator, "speedPerSec", 0.0001, 0.5);\n  gui.add(generator, "rangeR", 0.0, 32.0, 0.1);\n  gui.add(generator, "rangeRotationSpeed", 0.0, 3.14 * 4, 0.01);\n  gui.add(prop, "ease", ["cubicOut", "cubicInOut", "liner"]).onChange(() => {\n    let ease = null;\n\n    switch (prop.ease) {\n      case "cubicOut":\n        ease = tween_esm/* default.Easing.Cubic.Out */.ZP.Easing.Cubic.Out;\n        break;\n\n      case "cubicInOut":\n        ease = tween_esm/* default.Easing.Cubic.InOut */.ZP.Easing.Cubic.InOut;\n        break;\n    }\n\n    animator.updateEase(ease, generator.isLoop);\n  });\n  gui.add(prop, "path", ["heart", "circle", "triangle"]).onChange(() => {\n    let path;\n\n    switch (prop.path) {\n      case "heart":\n        path = esm/* BezierUtil.subdivide */.jP.subdivide((0,SamplePath/* getHeartPath */.dn)());\n        break;\n\n      case "circle":\n        path = esm/* BezierUtil.subdivide */.jP.subdivide((0,SamplePath/* getCircle */.P5)());\n        break;\n\n      case "triangle":\n        path = (0,SamplePath/* getTriangle */.Db)();\n        break;\n    }\n\n    generator.path[0].points = path;\n  });\n  gui.add(prop, "isPlay").onChange(() => {\n    if (prop.isPlay) {\n      generator.play();\n    } else {\n      generator.stop();\n    }\n  });\n  const modeManager = generator.modeManager;\n  gui.add(prop, "mode", ["SEQUENTIAL", "LOOP"]).onChange(() => {\n    switch (prop.mode) {\n      case "SEQUENTIAL":\n        modeManager.mode = esm/* GenerationMode.SEQUENTIAL */.s2.SEQUENTIAL;\n        break;\n\n      case "LOOP":\n        modeManager.mode = esm/* GenerationMode.LOOP */.s2.LOOP;\n        break;\n    }\n  });\n  gui.add(prop, "valve").onChange(() => {\n    const valve = generator.valve;\n\n    if (prop.valve) {\n      valve.open();\n    } else {\n      valve.close();\n    }\n  });\n  gui.add(prop, "visiblePassage").onChange(() => {\n    const ways = generator.multipleWays.ways;\n\n    if (prop.visiblePassage) {\n      ways[0].showPassage();\n    } else {\n      ways[0].hidePassage();\n    }\n  });\n  gui.add(prop, "clear");\n};\n/**\n * DOMContentLoaded以降に初期化処理を実行する\n */\n\n\nif (document.readyState !== "loading") {\n  onDomContentsLoaded();\n} else {\n  document.addEventListener("DOMContentLoaded", onDomContentsLoaded);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///512\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(B.exports,B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,B,U)=>{if(!F){var I=1/0;for(i=0;i<deferred.length;i++){for(var[F,B,U]=deferred[i],g=!0,C=0;C<F.length;C++)(!1&U||I>=U)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[C])))?F.splice(C--,1):(g=!1,U<I&&(I=U));if(g){deferred.splice(i--,1);var s=B();void 0!==s&&(Q=s)}}return Q}U=U||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>U;i--)deferred[i]=deferred[i-1];deferred[i]=[F,B,U]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=365,(()=>{var Q={365:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,B)=>{var U,I,[g,C,s]=B,i=0;if(g.some((F=>0!==Q[F]))){for(U in C)__webpack_require__.o(C,U)&&(__webpack_require__.m[U]=C[U]);if(s)var n=s(__webpack_require__)}for(F&&F(B);i<g.length;i++)I=g[i],__webpack_require__.o(Q,I)&&Q[I]&&Q[I][0](),Q[I]=0;return __webpack_require__.O(n)},B=self.webpackChunk_masatomakino_pixijs_particle_waypoint=self.webpackChunk_masatomakino_pixijs_particle_waypoint||[];B.forEach(F.bind(null,0)),B.push=F.bind(null,B.push.bind(B))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(512)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();