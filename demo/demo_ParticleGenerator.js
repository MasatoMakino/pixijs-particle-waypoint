(()=>{var __webpack_modules__={405:(__unused_webpack_module,exports)=>{eval("exports.dn = () => {\n  return [[199.999692558296, 139.037809861326], [199.999692558296, 139.037809861326, 216.517501342052, 91.0703552349714, 260.408864739813, 101.478048251449], [304.306569058069, 111.887435228376, 302.040473463538, 149.898168782486, 297.969050788655, 167.089794944798], [293.891253219557, 184.314831799952, 266.291989537884, 213.247676318414, 241.405592420215, 229.538070494226], [216.517501342052, 245.828464670041, 201.360366325658, 263.475297677716, 199.999692558296, 269.360116287618], [198.644947652665, 263.475297677716, 183.481883774538, 245.828464670041, 158.595486656873, 229.538070494226], [133.70739557871, 213.247676318414, 106.111932139903, 184.314831799952, 102.030334327938, 167.089794944798], [97.9589002789453, 149.898168782486, 95.6966160382817, 111.887435228376, 139.592214337275, 101.478048251449], [183.481883774538, 91.0703552349714, 199.999692558296, 139.037809861326, 199.999692558296, 139.037809861326]];\n};\nexports.P5 = () => {\n  const X = 200;\n  const Y = 200;\n  const K = 4 * (Math.sqrt(2) - 1) / 3;\n  const R = 100;\n  const RK = R * K;\n  return [[R + X, 0 + Y], [R + X, RK + Y, RK + X, R + Y, 0 + X, R + Y], [-RK + X, R + Y, -R + X, RK + Y, -R + X, 0 + Y], [-R + X, -RK + Y, -RK + X, -R + Y, 0 + X, -R + Y], [RK + X, -R + Y, R + X, -RK + Y, R + X, 0 + Y]];\n};\nexports.Db = () => {\n  return [[200, 100], [300, 273.205080756887], [100, 273.205080756887], [200, 100]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUUsR0FBRyxDQUFDLEVBQ1YsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsRUFDdkIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsRUFDdkIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQ1g7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby9waXhpanMtcGFydGljbGUtd2F5cG9pbnQvLi9kZW1vU3JjL1NhbXBsZVBhdGguanM/OTk4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmdldEhlYXJ0UGF0aCA9ICgpID0+IHtcbiAgcmV0dXJuIFtcbiAgICBbMTk5Ljk5OTY5MjU1ODI5NiwgMTM5LjAzNzgwOTg2MTMyNl0sXG4gICAgW1xuICAgICAgMTk5Ljk5OTY5MjU1ODI5NixcbiAgICAgIDEzOS4wMzc4MDk4NjEzMjYsXG4gICAgICAyMTYuNTE3NTAxMzQyMDUyLFxuICAgICAgOTEuMDcwMzU1MjM0OTcxNCxcbiAgICAgIDI2MC40MDg4NjQ3Mzk4MTMsXG4gICAgICAxMDEuNDc4MDQ4MjUxNDQ5XG4gICAgXSxcbiAgICBbXG4gICAgICAzMDQuMzA2NTY5MDU4MDY5LFxuICAgICAgMTExLjg4NzQzNTIyODM3NixcbiAgICAgIDMwMi4wNDA0NzM0NjM1MzgsXG4gICAgICAxNDkuODk4MTY4NzgyNDg2LFxuICAgICAgMjk3Ljk2OTA1MDc4ODY1NSxcbiAgICAgIDE2Ny4wODk3OTQ5NDQ3OThcbiAgICBdLFxuICAgIFtcbiAgICAgIDI5My44OTEyNTMyMTk1NTcsXG4gICAgICAxODQuMzE0ODMxNzk5OTUyLFxuICAgICAgMjY2LjI5MTk4OTUzNzg4NCxcbiAgICAgIDIxMy4yNDc2NzYzMTg0MTQsXG4gICAgICAyNDEuNDA1NTkyNDIwMjE1LFxuICAgICAgMjI5LjUzODA3MDQ5NDIyNlxuICAgIF0sXG4gICAgW1xuICAgICAgMjE2LjUxNzUwMTM0MjA1MixcbiAgICAgIDI0NS44Mjg0NjQ2NzAwNDEsXG4gICAgICAyMDEuMzYwMzY2MzI1NjU4LFxuICAgICAgMjYzLjQ3NTI5NzY3NzcxNixcbiAgICAgIDE5OS45OTk2OTI1NTgyOTYsXG4gICAgICAyNjkuMzYwMTE2Mjg3NjE4XG4gICAgXSxcbiAgICBbXG4gICAgICAxOTguNjQ0OTQ3NjUyNjY1LFxuICAgICAgMjYzLjQ3NTI5NzY3NzcxNixcbiAgICAgIDE4My40ODE4ODM3NzQ1MzgsXG4gICAgICAyNDUuODI4NDY0NjcwMDQxLFxuICAgICAgMTU4LjU5NTQ4NjY1Njg3MyxcbiAgICAgIDIyOS41MzgwNzA0OTQyMjZcbiAgICBdLFxuICAgIFtcbiAgICAgIDEzMy43MDczOTU1Nzg3MSxcbiAgICAgIDIxMy4yNDc2NzYzMTg0MTQsXG4gICAgICAxMDYuMTExOTMyMTM5OTAzLFxuICAgICAgMTg0LjMxNDgzMTc5OTk1MixcbiAgICAgIDEwMi4wMzAzMzQzMjc5MzgsXG4gICAgICAxNjcuMDg5Nzk0OTQ0Nzk4XG4gICAgXSxcbiAgICBbXG4gICAgICA5Ny45NTg5MDAyNzg5NDUzLFxuICAgICAgMTQ5Ljg5ODE2ODc4MjQ4NixcbiAgICAgIDk1LjY5NjYxNjAzODI4MTcsXG4gICAgICAxMTEuODg3NDM1MjI4Mzc2LFxuICAgICAgMTM5LjU5MjIxNDMzNzI3NSxcbiAgICAgIDEwMS40NzgwNDgyNTE0NDlcbiAgICBdLFxuICAgIFtcbiAgICAgIDE4My40ODE4ODM3NzQ1MzgsXG4gICAgICA5MS4wNzAzNTUyMzQ5NzE0LFxuICAgICAgMTk5Ljk5OTY5MjU1ODI5NixcbiAgICAgIDEzOS4wMzc4MDk4NjEzMjYsXG4gICAgICAxOTkuOTk5NjkyNTU4Mjk2LFxuICAgICAgMTM5LjAzNzgwOTg2MTMyNlxuICAgIF1cbiAgXTtcbn07XG5cbmV4cG9ydHMuZ2V0Q2lyY2xlID0gKCkgPT4ge1xuICBjb25zdCBYID0gMjAwO1xuICBjb25zdCBZID0gMjAwO1xuXG4gIGNvbnN0IEsgPSAoNCAqIChNYXRoLnNxcnQoMikgLSAxKSkgLyAzO1xuICBjb25zdCBSID0gMTAwO1xuICBjb25zdCBSSyA9IFIgKiBLO1xuICByZXR1cm4gW1xuICAgIFtSICsgWCwgMCArIFldLFxuICAgIFtSICsgWCwgUksgKyBZLCBSSyArIFgsIFIgKyBZLCAwICsgWCwgUiArIFldLFxuICAgIFstUksgKyBYLCBSICsgWSwgLVIgKyBYLCBSSyArIFksIC1SICsgWCwgMCArIFldLFxuICAgIFstUiArIFgsIC1SSyArIFksIC1SSyArIFgsIC1SICsgWSwgMCArIFgsIC1SICsgWV0sXG4gICAgW1JLICsgWCwgLVIgKyBZLCBSICsgWCwgLVJLICsgWSwgUiArIFgsIDAgKyBZXVxuICBdO1xufTtcblxuZXhwb3J0cy5nZXRUcmlhbmdsZSA9ICgpID0+IHtcbiAgcmV0dXJuIFtcbiAgICBbMjAwLCAxMDBdLFxuICAgIFszMDAsIDI3My4yMDUwODA3NTY4ODddLFxuICAgIFsxMDAsIDI3My4yMDUwODA3NTY4ODddLFxuICAgIFsyMDAsIDEwMF1cbiAgXTtcbn07XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsImdldEhlYXJ0UGF0aCIsImdldENpcmNsZSIsIlgiLCJZIiwiSyIsIk1hdGgiLCJzcXJ0IiwiUiIsIlJLIiwiZ2V0VHJpYW5nbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///405\n")},512:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/@masatomakino/particle-waypoint/esm/index.js + 13 modules\nvar esm = __webpack_require__(362);\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 347 modules\nvar lib = __webpack_require__(740);\n;// CONCATENATED MODULE: ./esm/PixiParticle.js\n\n\nclass PixiParticle extends esm/* Particle */.hp {\n  constructor() {\n    super(...arguments);\n    this.r = 0.0;\n    //媒介変数tに応じた回転量\n    this.rotationSpeedSin = 0.0;\n    this.rotationSpeedCos = 0.0;\n    //初期回転量\n    this.rotationSin = 0.0;\n    this.rotationCos = 0.0;\n  }\n  init(parent, bitmapURL, rangeR, rangeRotationSpeed, blendMode) {\n    this.parent = parent;\n    const texture = lib/* Texture */.xEZ.from(bitmapURL);\n    this.bitmap = new lib/* Sprite */.jyi(texture);\n    this.bitmap.anchor.set(0.5, 0.5);\n    this.bitmap.blendMode = blendMode;\n    this.parent.addChild(this.bitmap);\n    this.r = rangeR * Math.random();\n    this.rotationSpeedSin = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSpeedCos = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSin = Math.random() * 2 * Math.PI;\n    this.rotationCos = Math.random() * 2 * Math.PI;\n  }\n  update(t) {\n    const n = super.update(t);\n    const pos = this.path.getPoint(n);\n    this.bitmap.x = pos[0];\n    this.bitmap.y = pos[1];\n    if (this.r > 0.0) {\n      const sin = this.rotationSpeedSin * t + this.rotationSin;\n      const cos = this.rotationSpeedCos * t + this.rotationCos;\n      this.bitmap.x += Math.cos(cos) * this.r;\n      this.bitmap.y += Math.sin(sin) * this.r;\n    }\n    return n;\n  }\n  dispose() {\n    super.dispose();\n    if (this.parent && this.bitmap.parent) {\n      this.bitmap.parent.removeChild(this.bitmap);\n    }\n    this.parent = null;\n    this.bitmap = null;\n  }\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleGenerator.js\n\n\n\nclass PixiParticleGenerator extends esm/* ParticleGenerator */.F8 {\n  constructor(parent, path, map, option) {\n    var _a;\n    super(path, option);\n    this.mapCounter = 0;\n    this._rangeR = 0.0;\n    this._rangeRotationSpeed = 0.0;\n    this.parent = parent;\n    if (option) {\n      if (option.rangeR) this._rangeR = option.rangeR;\n      if (option.rangeRotationSpeed) this._rangeRotationSpeed = option.rangeRotationSpeed;\n    }\n    this._blendMode = (_a = option === null || option === void 0 ? void 0 : option.blendMode) !== null && _a !== void 0 ? _a : lib/* BLEND_MODES */.T$b.NORMAL;\n    if (Array.isArray(map)) {\n      if (map.length === 0) {\n        console.warn("PixiParticleGenerator : オプションとして渡されたテクスチャ配列が空です。このクラスは動作しますが、一切の表示を行いません。");\n        console.trace();\n      }\n      this.map = map;\n    } else {\n      this.map = [map];\n    }\n  }\n  generateParticle(path) {\n    const particle = new PixiParticle(path);\n    particle.init(this.parent, this.map[this.mapCounter], this._rangeR, this._rangeRotationSpeed, this._blendMode);\n    this.mapCounter = (this.mapCounter += 1) % this.map.length;\n    return particle;\n  }\n  generateAll() {\n    this.mapCounter = 0;\n    super.generateAll();\n  }\n  get rangeRotationSpeed() {\n    return this._rangeRotationSpeed;\n  }\n  set rangeRotationSpeed(value) {\n    this._rangeRotationSpeed = value;\n  }\n  get rangeR() {\n    return this._rangeR;\n  }\n  set rangeR(value) {\n    this._rangeR = value;\n  }\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleWay.js\n\n\nclass PixiParticleWay extends esm/* ParticleWay */.mG {\n  constructor(points, option) {\n    var _a, _b;\n    super(points);\n    this.passageColor = 0xff0000;\n    this.passageAlpha = 0.25;\n    if (!option) return;\n    this.passageColor = (_a = option === null || option === void 0 ? void 0 : option.passageColor) !== null && _a !== void 0 ? _a : this.passageColor;\n    this.passageAlpha = (_b = option === null || option === void 0 ? void 0 : option.passageAlpha) !== null && _b !== void 0 ? _b : this.passageAlpha;\n    if (option === null || option === void 0 ? void 0 : option.parent) {\n      this.initPassage(option.parent);\n    }\n  }\n  initPassage(parent) {\n    if (this.passage) return;\n    this.passage = new lib/* Graphics */.TCu();\n    this.passage.visible = false;\n    parent.addChild(this.passage);\n    this.drawPassage();\n  }\n  drawPassage() {\n    if (!this.passage) return;\n    if (!this.points) return;\n    if (this.points.length <= 1) return;\n    const isBezier = this.points[1].length === 6;\n    const g = this.passage;\n    g.clear().lineStyle(1, this.passageColor, this.passageAlpha);\n    this.points.forEach((p, index) => {\n      if (index === 0) {\n        g.moveTo(p[0], p[1]);\n        return;\n      }\n      if (!isBezier) {\n        g.lineTo(p[0], p[1]);\n        return;\n      }\n      g.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n    });\n    g.endFill();\n  }\n  onSetPoints() {\n    super.onSetPoints();\n    this.drawPassage();\n  }\n  showPassage() {\n    if (!this.passage) return;\n    this.passage.visible = true;\n  }\n  hidePassage() {\n    if (!this.passage) return;\n    this.passage.visible = false;\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n// EXTERNAL MODULE: ./demoSrc/SamplePath.js\nvar SamplePath = __webpack_require__(405);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\n/**\n * ParticleWayを初期化する。\n * @return {ParticleWay}\n */\nfunction initWay(stage) {\n  const points = (0,SamplePath/* getHeartPath */.dn)();\n  const wayPoint = new PixiParticleWay(esm/* BezierUtil */.jP.subdivide(points), {\n    parent: stage\n  });\n  return wayPoint;\n}\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(429);\n// EXTERNAL MODULE: ./node_modules/@tweenjs/tween.js/dist/tween.esm.js\nvar tween_esm = __webpack_require__(984);\n;// CONCATENATED MODULE: ./demoSrc/demo_ParticleGenerator.js\n\n\n\n\n\n\n\n\n/**\n * DOMContentLoaded後の初期化処理。\n * デモに必要なパーツを一式初期化する。\n */\nconst onDomContentsLoaded = () => {\n  const app = new lib/* Application */.MxU({\n    width: 640,\n    height: 480\n  });\n  document.body.appendChild(app.view);\n  const way = initWay(app.stage);\n  const generator = initGenerator(way, app.stage);\n  initGUI(generator);\n};\n\n/**\n * パーティクル生成機を初期化する。\n * @param way\n * @param stage\n * @return {PixiParticleGenerator}\n */\nconst initGenerator = (way, stage) => {\n  const bitmap = [];\n  for (let i = 0; i < 12; i++) {\n    bitmap.push(`./circle${(i + 1).toString().padStart(2, "0")}.png`);\n  }\n  const generator = new PixiParticleGenerator(stage, way, bitmap, {\n    ease: tween_esm/* default.Easing */.ZP.Easing.Cubic.InOut,\n    blendMode: lib/* BLEND_MODES */.T$b.ADD\n  });\n  generator.animator.setSpeed(166, 8 * 6);\n  generator.play();\n  return generator;\n};\n\n/**\n * デモのパラメーターを操作するGUIを初期化する。\n * @param generator\n */\nconst initGUI = generator => {\n  const prop = {\n    isPlay: true,\n    path: "heart",\n    ease: "cubicInOut",\n    valve: true,\n    mode: "sequential",\n    visiblePassage: false,\n    clear: () => {\n      generator.particleContainer.removeAll();\n    }\n  };\n  const gui = new lil_gui_esm/* default */.ZP();\n  const animator = generator.animator;\n  gui.add(animator, "generationInterval", 1, 1000);\n  gui.add(animator, "speedPerSec", 0.0001, 0.5);\n  gui.add(generator, "rangeR", 0.0, 32.0, 0.1);\n  gui.add(generator, "rangeRotationSpeed", 0.0, 3.14 * 4, 0.01);\n  gui.add(prop, "ease", ["cubicOut", "cubicInOut", "liner"]).onChange(() => {\n    let ease = null;\n    switch (prop.ease) {\n      case "cubicOut":\n        ease = tween_esm/* default.Easing */.ZP.Easing.Cubic.Out;\n        break;\n      case "cubicInOut":\n        ease = tween_esm/* default.Easing */.ZP.Easing.Cubic.InOut;\n        break;\n    }\n    animator.updateEase(ease, generator.isLoop);\n  });\n  gui.add(prop, "path", ["heart", "circle", "triangle"]).onChange(() => {\n    let path;\n    switch (prop.path) {\n      case "heart":\n        path = esm/* BezierUtil */.jP.subdivide((0,SamplePath/* getHeartPath */.dn)());\n        break;\n      case "circle":\n        path = esm/* BezierUtil */.jP.subdivide((0,SamplePath/* getCircle */.P5)());\n        break;\n      case "triangle":\n        path = (0,SamplePath/* getTriangle */.Db)();\n        break;\n    }\n    generator.path[0].points = path;\n  });\n  gui.add(prop, "isPlay").onChange(() => {\n    if (prop.isPlay) {\n      generator.play();\n    } else {\n      generator.stop();\n    }\n  });\n  const modeManager = generator.modeManager;\n  gui.add(modeManager, "mode", ["sequential", "loop"]);\n  gui.add(prop, "valve").onChange(() => {\n    const valve = generator.valve;\n    if (prop.valve) {\n      valve.open();\n    } else {\n      valve.close();\n    }\n  });\n  gui.add(prop, "visiblePassage").onChange(() => {\n    const ways = generator.multipleWays.ways;\n    if (prop.visiblePassage) {\n      ways[0].showPassage();\n    } else {\n      ways[0].hidePassage();\n    }\n  });\n  gui.add(prop, "clear");\n};\n\n/**\n * DOMContentLoaded以降に初期化処理を実行する\n */\nif (document.readyState !== "loading") {\n  onDomContentsLoaded();\n} else {\n  document.addEventListener("DOMContentLoaded", onDomContentsLoaded);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///512\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var I=1/0;for(i=0;i<deferred.length;i++){for(var[U,F,B]=deferred[i],s=!0,g=0;g<U.length;g++)(!1&B||I>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[g])))?U.splice(g--,1):(s=!1,B<I&&(I=B));if(s){deferred.splice(i--,1);var C=F();void 0!==C&&(Q=C)}}return Q}B=B||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>B;i--)deferred[i]=deferred[i-1];deferred[i]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=365,(()=>{var Q={365:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,I,[s,g,C]=F,i=0;if(s.some((U=>0!==Q[U]))){for(B in g)__webpack_require__.o(g,B)&&(__webpack_require__.m[B]=g[B]);if(C)var n=C(__webpack_require__)}for(U&&U(F);i<s.length;i++)I=s[i],__webpack_require__.o(Q,I)&&Q[I]&&Q[I][0](),Q[I]=0;return __webpack_require__.O(n)},F=self.webpackChunk_masatomakino_pixijs_particle_waypoint=self.webpackChunk_masatomakino_pixijs_particle_waypoint||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(512)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();