(()=>{"use strict";var __webpack_modules__={1915:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/@masatomakino/particle-waypoint/esm/index.js + 13 modules\nvar esm = __webpack_require__(2768);\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 38 modules\nvar lib = __webpack_require__(2090);\n;// CONCATENATED MODULE: ./esm/PixiParticle.js\n\n\nclass PixiParticle extends esm/* Particle */.hp {\n  constructor() {\n    super(...arguments);\n    this.r = 0.0;\n    //媒介変数tに応じた回転量\n    this.rotationSpeedSin = 0.0;\n    this.rotationSpeedCos = 0.0;\n    //初期回転量\n    this.rotationSin = 0.0;\n    this.rotationCos = 0.0;\n  }\n  get bitmap() {\n    return this._bitmap;\n  }\n  init(parent, bitmapURL, rangeR, rangeRotationSpeed, blendMode) {\n    this.parent = parent;\n    this._bitmap = lib/* Sprite */.jyi.from(bitmapURL);\n    this._bitmap.anchor.set(0.5, 0.5);\n    this._bitmap.blendMode = blendMode;\n    this.parent.addChild(this._bitmap);\n    this.r = rangeR * Math.random();\n    this.rotationSpeedSin = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSpeedCos = rangeRotationSpeed * (Math.random() * 2 - 1);\n    this.rotationSin = Math.random() * 2 * Math.PI;\n    this.rotationCos = Math.random() * 2 * Math.PI;\n  }\n  update(t) {\n    const n = super.update(t);\n    const pos = this.path.getPoint(n);\n    this._bitmap.x = pos[0];\n    this._bitmap.y = pos[1];\n    if (this.r > 0.0) {\n      const sin = this.rotationSpeedSin * t + this.rotationSin;\n      const cos = this.rotationSpeedCos * t + this.rotationCos;\n      this._bitmap.x += Math.cos(cos) * this.r;\n      this._bitmap.y += Math.sin(sin) * this.r;\n    }\n    return n;\n  }\n  dispose() {\n    super.dispose();\n    if (this.parent && this._bitmap.parent) {\n      this._bitmap.parent.removeChild(this._bitmap);\n    }\n    this.parent = null;\n    this._bitmap = null;\n  }\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleGenerator.js\n\n\n\nclass PixiParticleGenerator extends esm/* ParticleGenerator */.F8 {\n  constructor(parent, path, map, option) {\n    super(path, option);\n    this.mapCounter = 0;\n    this._isInit = false;\n    this.parent = parent;\n    this._rangeR = option?.rangeR ?? 0;\n    this._rangeRotationSpeed = option?.rangeRotationSpeed ?? 0;\n    this._blendMode = option?.blendMode ?? "normal";\n    if (Array.isArray(map)) {\n      if (map.length === 0) {\n        console.warn("PixiParticleGenerator : オプションとして渡されたテクスチャ配列が空です。このクラスは動作しますが、一切の表示を行いません。");\n        console.trace();\n      }\n      this.map = map;\n    } else {\n      this.map = [map];\n    }\n  }\n  async initAssets() {\n    await lib/* Assets */.deM.load(this.map);\n    this._isInit = true;\n  }\n  generateParticle(path) {\n    this.checkInit();\n    const particle = new PixiParticle(path);\n    particle.init(this.parent, this.map[this.mapCounter], this._rangeR, this._rangeRotationSpeed, this._blendMode);\n    this.mapCounter = (this.mapCounter += 1) % this.map.length;\n    return particle;\n  }\n  generateAll() {\n    this.mapCounter = 0;\n    super.generateAll();\n  }\n  checkInit() {\n    if (!this._isInit) {\n      throw new Error("PixiParticleGenerator : このクラスを使用する前にinitAssets()を呼び出してください。");\n    }\n  }\n  get rangeRotationSpeed() {\n    return this._rangeRotationSpeed;\n  }\n  set rangeRotationSpeed(value) {\n    this._rangeRotationSpeed = value;\n  }\n  get rangeR() {\n    return this._rangeR;\n  }\n  set rangeR(value) {\n    this._rangeR = value;\n  }\n}\n;// CONCATENATED MODULE: ./esm/PixiParticleWay.js\n\n\nclass PixiParticleWay extends (/* unused pure expression or super */ null && (ParticleWay)) {\n  constructor(points, option) {\n    super(points);\n    this.passageColor = 0xff0000;\n    this.passageAlpha = 0.25;\n    if (!option) return;\n    this.passageColor = option?.passageColor ?? this.passageColor;\n    this.passageAlpha = option?.passageAlpha ?? this.passageAlpha;\n    if (option?.parent) {\n      this.initPassage(option.parent);\n    }\n  }\n  initPassage(parent) {\n    if (this.passage) return;\n    this.passage = new Graphics();\n    this.passage.visible = false;\n    parent.addChild(this.passage);\n    this.drawPassage();\n  }\n  drawPassage() {\n    if (!this.passage) return;\n    if (!this.points) return;\n    if (this.points.length <= 1) return;\n    const isBezier = this.points[1].length === 6;\n    const g = this.passage;\n    g.clear();\n    this.points.forEach((p, index) => {\n      if (index === 0) {\n        g.moveTo(p[0], p[1]);\n        return;\n      }\n      if (!isBezier) {\n        g.lineTo(p[0], p[1]);\n        return;\n      }\n      g.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n    });\n    g.stroke({\n      width: 1,\n      color: this.passageColor,\n      alpha: this.passageAlpha\n    });\n  }\n  onSetPoints() {\n    super.onSetPoints();\n    this.drawPassage();\n  }\n  showPassage() {\n    if (!this.passage) return;\n    this.passage.visible = true;\n  }\n  hidePassage() {\n    if (!this.passage) return;\n    this.passage.visible = false;\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo_SimpleParticleGenerator.js\n\n\n\n\n/**\n * DOMContentLoaded後の初期化処理。\n * デモに必要なパーツを一式初期化する。\n */\nconst onDomContentsLoaded = async () => {\n  const points = [[100, 100], [100, 200], [200, 200], [200, 300]];\n  const wayPoint = new esm/* ParticleWay */.mG(points);\n  const app = new lib/* Application */.MxU();\n  await app.init({\n    width: 640,\n    height: 480\n  });\n  document.body.appendChild(app.canvas);\n  (0,lib/* sayHello */.DE6)(lib/* RendererType */.g4s[app.renderer.type]);\n  const generator = new PixiParticleGenerator(app.stage, wayPoint, ["./circle.png"]);\n  await generator.initAssets();\n  generator.play();\n};\n\n/**\n * DOMContentLoaded以降に初期化処理を実行する\n */\nif (document.readyState !== "loading") {\n  onDomContentsLoaded();\n} else {\n  document.addEventListener("DOMContentLoaded", onDomContentsLoaded);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1915\n')}},__webpack_module_cache__={},deferred,inProgress,dataWebpackPrefix;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var B=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,B,F)=>{if(!U){var s=1/0;for(g=0;g<deferred.length;g++){for(var[U,B,F]=deferred[g],I=!0,i=0;i<U.length;i++)(!1&F||s>=F)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[i])))?U.splice(i--,1):(I=!1,F<s&&(s=F));if(I){deferred.splice(g--,1);var e=B();void 0!==e&&(Q=e)}}return Q}F=F||0;for(var g=deferred.length;g>0&&deferred[g-1][2]>F;g--)deferred[g]=deferred[g-1];deferred[g]=[U,B,F]},__webpack_require__.d=(Q,U)=>{for(var B in U)__webpack_require__.o(U,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:U[B]})},__webpack_require__.f={},__webpack_require__.e=Q=>Promise.all(Object.keys(__webpack_require__.f).reduce(((U,B)=>(__webpack_require__.f[B](Q,U),U)),[])),__webpack_require__.u=Q=>Q+".js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),inProgress={},dataWebpackPrefix="@masatomakino/pixijs-particle-waypoint:",__webpack_require__.l=(Q,U,B,F)=>{if(inProgress[Q])inProgress[Q].push(U);else{var s,I;if(void 0!==B)for(var i=document.getElementsByTagName("script"),e=0;e<i.length;e++){var g=i[e];if(g.getAttribute("src")==Q||g.getAttribute("data-webpack")==dataWebpackPrefix+B){s=g;break}}s||(I=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,__webpack_require__.nc&&s.setAttribute("nonce",__webpack_require__.nc),s.setAttribute("data-webpack",dataWebpackPrefix+B),s.src=Q),inProgress[Q]=[U];var n=(U,B)=>{s.onerror=s.onload=null,clearTimeout(a);var F=inProgress[Q];if(delete inProgress[Q],s.parentNode&&s.parentNode.removeChild(s),F&&F.forEach((Q=>Q(B))),U)return U(B)},a=setTimeout(n.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=n.bind(null,s.onerror),s.onload=n.bind(null,s.onload),I&&document.head.appendChild(s)}},__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.j=702,(()=>{var Q;__webpack_require__.g.importScripts&&(Q=__webpack_require__.g.location+"");var U=__webpack_require__.g.document;if(!Q&&U&&(U.currentScript&&(Q=U.currentScript.src),!Q)){var B=U.getElementsByTagName("script");if(B.length)for(var F=B.length-1;F>-1&&!Q;)Q=B[F--].src}if(!Q)throw new Error("Automatic publicPath is not supported in this browser");Q=Q.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=Q})(),(()=>{var Q={702:0};__webpack_require__.f.j=(U,B)=>{var F=__webpack_require__.o(Q,U)?Q[U]:void 0;if(0!==F)if(F)B.push(F[2]);else{var s=new Promise(((B,s)=>F=Q[U]=[B,s]));B.push(F[2]=s);var I=__webpack_require__.p+__webpack_require__.u(U),i=new Error;__webpack_require__.l(I,(B=>{if(__webpack_require__.o(Q,U)&&(0!==(F=Q[U])&&(Q[U]=void 0),F)){var s=B&&("load"===B.type?"missing":B.type),I=B&&B.target&&B.target.src;i.message="Loading chunk "+U+" failed.\n("+s+": "+I+")",i.name="ChunkLoadError",i.type=s,i.request=I,F[1](i)}}),"chunk-"+U,U)}},__webpack_require__.O.j=U=>0===Q[U];var U=(U,B)=>{var F,s,[I,i,e]=B,g=0;if(I.some((U=>0!==Q[U]))){for(F in i)__webpack_require__.o(i,F)&&(__webpack_require__.m[F]=i[F]);if(e)var n=e(__webpack_require__)}for(U&&U(B);g<I.length;g++)s=I[g],__webpack_require__.o(Q,s)&&Q[s]&&Q[s][0](),Q[s]=0;return __webpack_require__.O(n)},B=self.webpackChunk_masatomakino_pixijs_particle_waypoint=self.webpackChunk_masatomakino_pixijs_particle_waypoint||[];B.forEach(U.bind(null,0)),B.push=U.bind(null,B.push.bind(B))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(1915)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();